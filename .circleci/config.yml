# .circleci/config.yml - CircleCI configuration for Meteor v3 + Nightwatch testing

version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.4.8

jobs:
  test-e2e:
    docker:
      - image: cimg/node:20.11.0-browsers
        environment:
          CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
          CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
          TZ: "America/Chicago"
          NODE_ENV: test
          NIGHTWATCH: true
          DEBUG: true
          DISPLAY: :99.0
          NODE_OPTIONS: --max_old_space_size=4096
          TOOL_NODE_FLAGS: --max_old_space_size=4096
          TEST_BROWSER_DRIVER: chrome
          MONGO_URL: mongodb://mongo:27017/meteor_test
      - image: mongo:6.0
        name: mongo
    
    resource_class: large
    
    steps:
      - browser-tools/install-browser-tools
      
      - checkout
      
      - run:
          name: Create directories
          command: |
            mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
      
      - run:
          name: Show environment info
          command: |
            node --version
            google-chrome --version
            pwd
            ls -la
      
      - run:
          name: Wait for MongoDB
          command: |
            for i in {1..30}; do
              if mongo --eval "db.version()" > /dev/null 2>&1; then
                echo "MongoDB is ready!"
                break
              fi
              echo "Waiting for MongoDB... ($i/30)"
              sleep 2
            done
      
      - run:
          name: Install Meteor
          command: |
            curl https://install.meteor.com/ | sh
            echo 'export PATH="$HOME/.meteor:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            meteor --version
      
      - run:
          name: Install dependencies
          command: |
            meteor npm install
            sudo npm install -g nightwatch@3.0.1
            nightwatch --version
          no_output_timeout: 20m
      
      - run:
          name: Start Meteor
          command: |
            if [ -f "configs/settings.nodeonfhir.json" ]; then
              meteor run --settings configs/settings.nodeonfhir.json --port 3000
            else
              meteor run --port 3000
            fi
          background: true
          no_output_timeout: 30m
      
      - run:
          name: Wait for Meteor to start
          command: |
            for i in {1..60}; do
              if curl -f http://localhost:3000 > /dev/null 2>&1; then
                echo "Meteor is ready!"
                break
              fi
              echo "Waiting for Meteor... ($i/60)"
              sleep 10
            done
            
            if ! curl -f http://localhost:3000 > /dev/null 2>&1; then
              echo "ERROR: Meteor failed to start"
              exit 1
            fi
      
      - run:
          name: Run Nightwatch tests
          command: |
            if [ -f "nightwatch.conf.js" ]; then
              npx nightwatch --config nightwatch.conf.js
            elif [ -f ".meteor/nightwatch.circle.json" ]; then
              npx nightwatch -c .meteor/nightwatch.circle.json
            else
              echo "No Nightwatch config found"
              exit 1
            fi
          no_output_timeout: 15m
      
      - run:
          name: Collect artifacts
          command: |
            if [ -d "tests_output" ]; then
              cp -r tests_output/* $CIRCLE_TEST_REPORTS/ || true
            fi
            if [ -d "screenshots" ]; then
              cp -r screenshots $CIRCLE_ARTIFACTS/ || true
            fi
            find . -name "*.png" -type f -exec cp {} $CIRCLE_ARTIFACTS/ \; || true
          when: always
      
      - store_test_results:
          path: /tmp/circleci-test-results
      
      - store_artifacts:
          path: /tmp/circleci-artifacts

workflows:
  test-workflow:
    jobs:
      - test-e2e